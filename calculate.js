// Присваивание начальных значений переменным
let currentDisplay = "0"; // текущее состояние дисплея, устанавливаю в 0
let resultDisplay = false; // флаг наличия результата в дисплее, в исходном состоянии также 0

// Добавление введённого символа
function addToDisplay(value) {
        if (currentDisplay === "0" || resultDisplay) {
            /* если в дисплее сейчас 0 или там уже находится результат операции - флаг наличия результата установлен в единицу,
            то в дисплее нужно отобразить только введённый символ */
            currentDisplay = value;
        } else {
            // в противном случае нужно отобразить то, что уже было в дисплее, с добавлением справа введённого символа:
            currentDisplay += value;
        }
        // т.к. пользователь ввёл новый символ в дисплей, устанавливаю флаг наличия результата в дисплее в 0:
        resultDisplay = false;
        updateDisplay(); // обновляю содержимое дисплея, вызывая функцию updateDisplay
}
// Обновление содержимого дисплея
function updateDisplay() {
        const displayElement = document.getElementById("display");
        /* с помощью метода getElementById достаю из html-страницы элемент с идентификатором "display" -
        это область тега pre, куда выводятся в виде строки все символы, введённые с кнопок калькулятора */
        displayElement.textContent = currentDisplay;
        /* с помощью свойства text.Content получаю текстовое содержимое этого элемента в виде строки и заменяю его
        на текущее значение переменной currentDisplay */
}

// Вычисление результата опреации и вывод его в дисплей
function calculateResult() {
        // использую конструкцию try ... catch для отлавливания ситуации с ошибочно введёнными с клавиатуры
        // символами, т.е. когда строка символов не может быть преобразована в корректное математическое выражение:
        try {
            const result = eval(currentDisplay);
            /* для преобразования строки в математическое выражение использую функцию eval();
            записываю результат выполнения математической операции в переменную result */
            currentDisplay += "\n" + result.toString();
            /* с помощью метода toString преобразую значение переменной result в строку;
            соединяю символ перевода строки (\n) с полученной строкой с помощью конкатенации строк (операция +);
            добавляю полученную таким образом строку к содержимому переменной currentDispley, т.е. к текущему состоянию дисплея; */
            updateDisplay(); // обновляю содержимое дисплея, вызывая функцию updateDisplay
        } catch (error) {
            // если математическое выражение некорректно, т.е. не может быть вычислено, то к текущему состоянию дисплея
            // с новой строки вывожу сообщение Error:
            currentDisplay += "\nError";
            updateDisplay(); // обновляю содержимое дисплея, вызывая функцию updateDisplay
        }
        // т.к. операция выполнена и на дисплей выведен результат, устанавливаю флаг наличия результата в дисплее в 1:
        resultDisplay = true;
}

// Стирание последнего символа, введённого в дисплее
function clearLastElement() {
        currentDisplay = currentDisplay.slice(0, -1);
        // метод slice() возвращает новую строку, содержащую копию определенной части исходной строки из переменной currentDisplay;
        // индексы (0, -1) указывают, что будут взяты символы с первого (индекс 0) и до последнего (индекс -), не включая последний;
        // результат записываем в переменную currentDislay.

        // если в дисплее был один единственный символ, то после его удаления в переменной currentDisplay пустая строка "",
        // значит на дисплей нужно вывести 0:
        if (currentDisplay === "") {
            currentDisplay = "0";
        }
        updateDisplay(); // обновляю содержимое дисплея, вызывая функцию updateDisplay
}

//Очистка дисплея, если на калькуляторе нажата кнопка С
function clearDisplay() {
        currentDisplay = "0";
        resultDisplay = false;
        updateDisplay();
}